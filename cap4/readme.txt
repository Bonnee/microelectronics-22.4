#NOTES:
## AUTO-TESTBENCH
The testbenches for this exercise are automatic, simply run the `./build.sh` script
and watch the output. If the entities are not performing correctly errors will be displayed.

For, example if in `ex_4.4/CU_UP.vhd` you change line 227:
```
        WF1  <= CW_CODE(uPC_temp)(PWF1);
```
to
```
        WF1  <= '1'; --CW_CODE(uPC_temp)(PWF1);
```
when you compile you will see this output on the console:
```
# ** Error: Error on OPCODE S_MEM2_OPCODE in stage=2
#    Time: 132 ns  Iteration: 0  Instance: /cu_test
# ** Error: ......................................... S_MEM2 : ERR
```
Meaning there is an error on the OPCODE S_MEM2 in the second stage of the pipeline

To achieve this autocheck the value of the control word generated by the control unit
is checked at each clock cycle. Obviously we cannot gurantee that the generated control
signals by our core are correct (we don't have a datapath to check against) but we 
can assure (if the testbench completes without errors in the log) that the output 
for each OPCODE+FUNC in each stage of the pipeline is a corect control word built by us.

The control words that will be generated can be found in COMM_PKG.vhdl and 
notes on how they are made are provided.

## PACKAGE
For these entities we did not use the mytypes package but the file `COMM_PKG.vhdl`

## OTHER NOTES
Both the UP and HW entities use LUT/MEMORIES for the control word access. We tried
our best to reduce the size of these memories but keeping the address space of the OPCODE
and FUNC available.
